version: 2.1
orbs:
  heroku: circleci/heroku@1.2.6
  aws-ecr: circleci/aws-ecr@8.1.3

jobs:
  test:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run: npm i
      - run:  echo
                POSTGRES_DB=${LOCAL_DB_NAME}$'\n'
                POSTGRES_USER=${LOCAL_DB_USER}$'\n'
                POSTGRES_PASSWORD=${LOCAL_DB_PASSWORD}$'\n'
                POSTGRES_URL=${LOCAL_POSTGRES_URL}$'\n'
                MONGO_URL=${LOCAL_MONGO_URL}$'\n'
              > .env
      - run: npx tsc
      - run: npx eslint ./
      - run: docker-compose --profile web --profile metadata up -d
      - run: nvm install node && npx jest --maxWorkers=50%

  integration_test:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run: npm i
      - run:  echo
                POSTGRES_DB=${LOCAL_DB_NAME}$'\n'
                POSTGRES_USER=${LOCAL_DB_USER}$'\n'
                POSTGRES_PASSWORD=${LOCAL_DB_PASSWORD}$'\n'
                MONGO_URL=${LOCAL_MONGO_URL}$'\n'
              > .env
      - run: npx tsc
      - run: npx eslint ./
      - run: docker-compose --profile integration up -d
      - run: nvm install node && npx jest --maxWorkers=50% --testMatch **/*.integrationTest.*

  load_test:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - run: npm i
      - run:  echo
                LOAD_TEST=true$'\n'
                DATABASE_URL=${LOAD_TEST_DB_URL}$'\n'
                REDIS_TLS_URL=${LOAD_TEST_REDIS_TLS_URL}$'\n'
              > .env
      - run: nvm install node && npm run load-test

workflows:
  test_and_deploy:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          repo: hierarchy-service-backend/web
          filters:
            branches:
              only: main
          requires:
            - test
      - aws-ecr/build-and-push-image:
          repo: hierarchy-service-backend/metadata
          filters:
            branches:
              only: main
          requires:
            - test

  integration_test:
    jobs:
      - integration_test:
          filters:
            branches:
              only: integration-test

  # scheduled-load-test:
  #   triggers:
  #     - schedule:
  #         cron: "0 13 * * 3"
  #         filters:
  #           branches:
  #             only: main
  #   jobs:
  #     - load_test
