version: 2.1
orbs:
  heroku: circleci/heroku@1.2.6

jobs:
  test:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run: npm i
      - run:  echo
                HOST=${LOCAL_DB_HOST}$'\n'
                POSTGRES_DB=${LOCAL_DB_NAME}$'\n'
                POSTGRES_PORT=${LOCAL_DB_PORT}$'\n'
                POSTGRES_USER=${LOCAL_DB_USER}$'\n'
                POSTGRES_PASSWORD=${LOCAL_DB_PASSWORD}$'\n'
              > .env
      - run: npx eslint ./
      - run: docker-compose up -d
      - run: nvm install node && npx jest --maxWorkers=50%

  load_test:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - run: npm i
      - run:  echo
                LOAD_TEST=true$'\n'
                DATABASE_URL=${LOAD_TEST_DB_URL}$'\n'
                REDIS_TLS_URL=${LOAD_TEST_REDIS_TLS_URL}$'\n'
              > .env
      - run: nvm install node && npm run load-test

workflows:
  test_and_deploy:
    jobs:
      - test

      - heroku/deploy-via-git:
          filters:
            branches:
              only: main
          requires:
            - test
          # post-steps:
          #   - run: your-database-migration-command

      - heroku/deploy-via-git:
          app-name: ${HEROKU_LOAD_APP_NAME}
          filters:
            branches:
              only: main
          requires:
            - test

  scheduled-load-test:
    triggers:
      - schedule:
          cron: "18 18 * * 2"
          filters:
            branches:
              only:
                - main
                - scheduled-load-test

    jobs:
      - load_test
